# Generated by Django 5.2.7 on 2025-10-18 07:54

from django.db import migrations


def seed_categories_and_subcategories(apps, schema_editor):
    """
    Seed the database with Categories and SubCategories.
    This ensures consistent data across all environments.
    """
    Category = apps.get_model('api', 'Category')
    SubCategory = apps.get_model('api', 'SubCategory')
    
    # Create Categories
    hazard_category, _ = Category.objects.get_or_create(
        report_type='Hazard',
        defaults={'report_type': 'Hazard'}
    )
    
    infrastructure_category, _ = Category.objects.get_or_create(
        report_type='Infrastructure',
        defaults={'report_type': 'Infrastructure'}
    )
    
    # Hazard SubCategories
    hazard_subcategories = [
        ('FLOODING', 'Flooding/Water Overflow'),
        ('LANDSLIDE', 'Landslide/Soil Erosion'),
        ('FIRE_HAZARD', 'Fire Hazard'),
        ('ELECTRICAL_HAZARD', 'Electrical Hazard'),
        ('FALLEN_TREES', 'Fallen Trees/Debris Blocking Road'),
        ('ROAD_ACCIDENT', 'Road accident'),
        ('BLOCKED_DRAINAGE', 'Blocked Drainage/Clogged Gutter'),
        ('EARTHQUAKE', 'Earthquake Damage'),
        ('SINKHOLE', 'Sinkhole'),
        ('PUBLIC_HEALTH', 'Public Health Hazard'),
        ('HAZARD_OTHER', 'Other Hazard (specify)'),
    ]
    
    for sub_cat_code, sub_cat_display in hazard_subcategories:
        SubCategory.objects.get_or_create(
            report_type=hazard_category,
            sub_category=sub_cat_code,
            defaults={
                'report_type': hazard_category,
                'sub_category': sub_cat_code
            }
        )
    
    # Infrastructure SubCategories
    infrastructure_subcategories = [
        ('ROAD_DAMAGE', 'Road damage/Potholes'),
        ('STREETLIGHTS', 'Streetlights/Electrical Issues'),
        ('SIDEWALKS', 'Sidewalks/Pedestrian Paths'),
        ('BUILDING', 'Building/Structural Concerns'),
        ('BRIDGE', 'Bridge/Overpass Issues'),
        ('STRUCTURAL_COLLAPSE', 'Structural Collapses/Weak infrastructure'),
        ('SAFETY_SECURITY', 'Safety and Security Concerns'),
        ('INFRA_OTHER', 'Other (specify)'),
    ]
    
    for sub_cat_code, sub_cat_display in infrastructure_subcategories:
        SubCategory.objects.get_or_create(
            report_type=infrastructure_category,
            sub_category=sub_cat_code,
            defaults={
                'report_type': infrastructure_category,
                'sub_category': sub_cat_code
            }
        )


def reverse_seed(apps, schema_editor):
    """
    Reverse migration - delete all seeded data.
    """
    Category = apps.get_model('api', 'Category')
    SubCategory = apps.get_model('api', 'SubCategory')
    
    # Delete all subcategories and categories
    SubCategory.objects.all().delete()
    Category.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_report_sub_category_report_title'),
    ]

    operations = [
        migrations.RunPython(seed_categories_and_subcategories, reverse_seed),
    ]
